//mod by Amelia Winger-Bearskin (ITP Class of 2015)
#include <DHT22.h>
// Only used for sprintf
#include <stdio.h>

// Data wire is plugged into port 7 on the Arduino
// Connect a 4.7K resistor between VCC and the data pin (strong pullup)
#define DHT22_PIN 7

// Setup a DHT22 instance
DHT22 myDHT22(DHT22_PIN);
#include <Bridge.h>
#include <Temboo.h>
#include "TembooAccount.h" // contains Temboo account information

const String GMAIL_USER_NAME = "XXXXXXX@gmail.com";

// your Gmail password
const String GMAIL_PASSWORD = "XXXXXXXXX";

// the email address you want to send the email to, eg "jane.doe@temboo.com"
const String TO_EMAIL_ADDRESS = "amelia@XXXXXXXXX";


boolean success = false; // a flag to indicate whether we've sent the email yet or not

void setup() {
  Serial.begin(9600);

  // for debugging, wait until a serial console is connected
  delay(4000);
  while (!Serial);

  Bridge.begin();
  Serial.begin(9600);
  Serial.println("DHT22 Library Demo");
}

void loop()
{   DHT22_ERROR_t errorCode;
  
  // The sensor can only be read from every 1-2s, and requires a minimum
  // 2s warm-up after power-on.
  delay(2000);
  
  errorCode = myDHT22.readData();
      char buf[128];
      sprintf(buf, "MoccaMaster Coffee Reading: Temperature %hi.%01hi C, Humidity %i.%01i %% RH",
                   myDHT22.getTemperatureCInt()/10, abs(myDHT22.getTemperatureCInt()%10),
                   myDHT22.getHumidityInt()/10, myDHT22.getHumidityInt()%10);
      Serial.println(buf);
  
  
  // only try to send the email if we haven't already sent it successfully
  if (myDHT22.getTemperatureCInt()/10 > 24.0) {
    if (!success) {

      Serial.println("Running SendAnEmail...");

      TembooChoreo SendEmailChoreo;

      // invoke the Temboo client
      // NOTE that the client must be reinvoked, and repopulated with
      // appropriate arguments, each time its run() method is called.
      SendEmailChoreo.begin();

      // set Temboo account credentials
      SendEmailChoreo.setAccountName(TEMBOO_ACCOUNT);
      SendEmailChoreo.setAppKeyName(TEMBOO_APP_KEY_NAME);
      SendEmailChoreo.setAppKey(TEMBOO_APP_KEY);

      // identify the Temboo Library choreo to run (Google > Gmail > SendEmail)
      SendEmailChoreo.setChoreo("/Library/Google/Gmail/SendEmail");


      // set the required choreo inputs
      // see https://www.temboo.com/library/Library/Google/Gmail/SendEmail/
      // for complete details about the inputs for this Choreo

      // the first input is your Gmail email address
      SendEmailChoreo.addInput("Username", GMAIL_USER_NAME);
      // next is your Gmail password.
      SendEmailChoreo.addInput("Password", GMAIL_PASSWORD);
      // who to send the email to
      SendEmailChoreo.addInput("ToAddress", TO_EMAIL_ADDRESS);
      // then a subject line
      SendEmailChoreo.addInput("Subject", "the Coffee is Ready");

      // next comes the message body, the main content of the email
      SendEmailChoreo.addInput("MessageBody", "There is now a new MoccaMaster pot of coffee ready");

      // tell the Choreo to run and wait for the results. The
      // return code (returnCode) will tell us whether the Temboo client
      // was able to send our request to the Temboo servers
      unsigned int returnCode = SendEmailChoreo.run();

      // a return code of zero (0) means everything worked
      if (returnCode == 0) {
        Serial.println("Success! Email sent!");
        success = true;
      } else {
        // a non-zero return code means there was an error
        // read and print the error message
        while (SendEmailChoreo.available()) {
          char c = SendEmailChoreo.read();
          Serial.print(c);
        }
      }
      SendEmailChoreo.close();

      // do nothing for the next 60 seconds
      delay(60000);
    }
  }
}
